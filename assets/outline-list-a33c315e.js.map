{"version":3,"file":"outline-list-a33c315e.js","sources":["../../packages/components/@deprecated/outline-list/src/outline-list.css.lit.ts","../../packages/components/@deprecated/outline-list/src/outline-list.ts"],"sourcesContent":["\nimport { css } from 'lit';\nexport default css`\n/* Apply component specific CSS */\n:host{\n  --outline-list--spacing--computed:var(--outline-list--spacing, var(--spacing-4));\n  --outline-list--spacing-xs--computed:var(--outline-list--spacing-xs, var(--outline-list--spacing, var(--spacing-4)));\n  --outline-list--spacing-sm--computed:var(--outline-list--spacing-sm, var(--outline-list--spacing, var(--spacing-4)));\n  --outline-list--spacing-md--computed:var(--outline--list--spacing-md, var(--outline-list--spacing, var(--spacing-4)));\n  --outline-list--spacing-lg--computed:var(--outline--list--spacing-lg, var(--outline-list--spacing, var(--spacing-4)));\n  --outline-list--spacing-xl--computed:var(--outline--list--spacing-xl, var(--outline-list--spacing, var(--spacing-4)));\n  --outline-list--spacing-xxl--computed:var(--outline--list--spacing-xxl, var(--outline-list--spacing, var(--spacing-4)));\n  --outline-list--spacing-xxxl--computed:var(--outline--list--spacing-xxxl, var(--outline-list--spacing, var(--spacing-4)));\n}\n\n.list{\n  border:unset;\n  margin:0;\n  padding:0;\n  display:flex;\n  flex-wrap:wrap;\n}\n\nul.list,\nul.grid{\n  list-style-type:none;\n}\n\nul.list > ::slotted(li),\nol.list > ::slotted(li),\nul.grid > ::slotted(li),\nol.grid > ::slotted(li){\n  display:flex;\n  align-items:center;\n  white-space:nowrap;\n}\n\n.list.row ::slotted(*:not(:last-of-type)){\n  margin-right:var(--outline-list--spacing--computed);\n}\n\n.list.column ::slotted(*:not(:last-of-type)),\n.list.col-center ::slotted(*:not(:last-of-type)){\n  margin-bottom:var(--outline-list--spacing--computed);\n}\n\n.columns--2,\n.columns--3,\n.columns--4,\n.columns--5,\n.columns--6{\n  display:flex;\n  flex-direction:column;\n}\n\n.row{\n  display:flex;\n  flex-direction:row;\n}\n\n.column{\n  display:flex;\n  flex-direction:column;\n}\n\n.col-center{\n  display:flex;\n  flex-direction:column;\n  align-items:center;\n}\n`;","import { CSSResultGroup, TemplateResult, html } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\n\nimport { OutlineElement } from '@phase2/outline-core';\n\nimport componentStyles from './outline-list.css.lit';\n\nexport const listTypes = ['ol', 'ul', 'div'] as const;\n\nexport type ListType = (typeof listTypes)[number];\n\nexport const listOrientations = ['column', 'row', 'col-center'] as const;\n\nexport type ListOrientation = (typeof listOrientations)[number];\n\nexport type ClassInfo = { [name: string]: string | boolean | number };\n\n/**\n * The OutlineList component\n * @element outline-list\n * @extends OutlineElement\n *\n * @cssprop --outline-list--spacing - The default spacing between items.\n * @cssprop --outline-list--spacing-xs - The default spacing between items for extra small screens.\n * @cssprop --outline-list--spacing-sm - The default spacing between items for small screens.\n * @cssprop --outline-list--spacing-md - The default spacing between items for medium screens.\n * @cssprop --outline-list--spacing-lg - The default spacing between items for large screens.\n * @cssprop --outline-list--spacing-xl - The default spacing between items for extra large screens.\n * @cssprop --outline-list--spacing-xxl - The default spacing between items for extra extra large screens.\n * @cssprop --outline-list--spacing-xxxl - The default spacing between items for extra extra extra large screens.\n *\n * @slot default slot.\n * @slot heading: for content above the default slot.\n * @slot footer: for content below the default slot.\n */\n@customElement('outline-list')\nexport class OutlineList extends OutlineElement {\n  static styles: CSSResultGroup = [componentStyles];\n\n  /**\n   * Determines which type of list is rendered.\n   * ol | ul | div\n   */\n  @property({ type: String, attribute: 'list-type' })\n  listType: ListType;\n\n  /**\n   * Sets orientation of list.\n   * column | row\n   */\n  @property({ type: String })\n  orientation: ListOrientation = 'column';\n\n  /**\n   * If set will wrap list in a nav tag\n   * with the passed string set as the aria-label.\n   */\n  @property({ type: String, attribute: 'nav-label' })\n  navLabel: string | undefined;\n\n  render(): TemplateResult {\n    const classes = {\n      list: true,\n      [`${this.orientation}`]: this.orientation,\n    };\n\n    return this.navLabel\n      ? html`\n          <slot name=\"heading\"></slot>\n          <nav role=\"navigation\" aria-label=\"${this.navLabel}\">\n            ${this.listCase(classes)}\n          </nav>\n          <slot name=\"footer\"></slot>\n        `\n      : html`<slot name=\"heading\"></slot>\n          ${this.listCase(classes)}\n          <slot name=\"footer\"></slot>`;\n  }\n\n  listCase(classes: ClassInfo) {\n    switch (this.listType) {\n      case 'ol':\n        return html`\n          <ol class=${classMap(classes)}>\n            <slot></slot>\n          </ol>\n        `;\n      case 'ul':\n        return html`\n          <ul class=${classMap(classes)}>\n            <slot></slot>\n          </ul>\n        `;\n      default:\n        return html`\n          <div class=${classMap(classes)}>\n            <slot></slot>\n          </div>\n        `;\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'outline-list': OutlineList;\n  }\n}\n"],"names":["componentStyles","css","listTypes","listOrientations","OutlineList","OutlineElement","classes","html","classMap","__decorateClass","property","customElement"],"mappings":"4MAEA,MAAAA,EAAeC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,kMCMR,MAAMC,EAAY,CAAC,KAAM,KAAM,KAAK,EAI9BC,EAAmB,CAAC,SAAU,MAAO,YAAY,EAyBjD,IAAAC,EAAN,cAA0BC,CAAe,CAAzC,aAAA,CAAA,MAAA,GAAA,SAAA,EAe0B,KAAA,YAAA,QAAA,CAS/B,QAAyB,CACvB,MAAMC,EAAU,CACd,KAAM,GACN,CAAC,GAAG,KAAK,WAAW,EAAE,EAAG,KAAK,WAAA,EAGhC,OAAO,KAAK,SACRC;AAAAA;AAAAA,+CAEuC,KAAK,QAAQ;AAAA,cAC9C,KAAK,SAASD,CAAO,CAAC;AAAA;AAAA;AAAA,UAI5BC;AAAAA,YACI,KAAK,SAASD,CAAO,CAAC;AAAA,sCAEhC,CAEA,SAASA,EAAoB,CAC3B,OAAQ,KAAK,SAAU,CACrB,IAAK,KACI,OAAAC;AAAAA,sBACOC,EAASF,CAAO,CAAC;AAAA;AAAA;AAAA,UAIjC,IAAK,KACI,OAAAC;AAAAA,sBACOC,EAASF,CAAO,CAAC;AAAA;AAAA;AAAA,UAIjC,QACS,OAAAC;AAAAA,uBACQC,EAASF,CAAO,CAAC;AAAA;AAAA;AAAA,SAIpC,CACF,CACF,EAjEaF,EACJ,OAAyB,CAACJ,CAAe,EAOhDS,EAAA,CADCC,EAAS,CAAE,KAAM,OAAQ,UAAW,YAAa,CAAA,EAPvCN,EAQX,UAAA,WAAA,CAAA,EAOAK,EAAA,CADCC,EAAS,CAAE,KAAM,OAAQ,CAAA,EAdfN,EAeX,UAAA,cAAA,CAAA,EAOAK,EAAA,CADCC,EAAS,CAAE,KAAM,OAAQ,UAAW,YAAa,CAAA,EArBvCN,EAsBX,UAAA,WAAA,CAAA,EAtBWA,EAANK,EAAA,CADNE,EAAc,cAAc,CAAA,EAChBP,CAAA"}