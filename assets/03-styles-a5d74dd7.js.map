{"version":3,"file":"03-styles-a5d74dd7.js","sources":["../../packages/documentation/outline-docs/src/guides/development/component-development/03-styles.mdx"],"sourcesContent":["import { Meta } from '@storybook/addon-docs';\nimport '@phase2/outline-alert';\nimport '@phase2/outline-container';\n\n<Meta\n  title=\"Documentation/Guides/Component Development/Coding Guide & Standards/Styling\"\n  parameters={{\n    viewMode: 'docs',\n    previewTabs: {\n      canvas: {\n        hidden: true,\n      },\n    },\n  }}\n/>\n\n<outline-container\n  container-width=\"full\"\n  container-align=\"left\"\n  top-margin=\"spacing-2\"\n  bottom-margin=\"spacing-8\"\n>\n  ## Description\n  This section will provide guidance on the specific usages and patterns for styling a component in Outline.\n\n  ## Documentation Status\n  <outline-alert status=\"error\" size=\"large\">\n    <span slot=\"header\">Status: Complete / In need of rewrite (Last Updated: August 2023)</span>\n  </outline-alert>\n</outline-container>\n\n## Implementation Standards\n\n- `styles` should be defined immediately following the class definition.\n\n## Importing Styles\n\nThe styles for Outline components are kept in a typical `.css` file such as `outline-widget.css` that lives parallel to the\ncomponent `outline-widget.ts`. These component CSS files utilize [PostCSS](https://postcss.org/) processing and a variety of plugins to handle various\nfeatures including implementing [Tailwind CSS](https://tailwindcss.com/) utility styles to keep the code clean and consistent.\n\nLit utilizes the static `styles` to contain any CSS required for a component.\n\nThe following examples shows us using import to bring in styles from our `outline-widget.css.lit.ts` file. Any CSS that is included should be wrapped in Litâ€™s `css` template literal.\nThis is where Outline applies additional logic to handle taking a standard CSS file like `outline-widget.css`,\nand converts to `outline-widget.css.lit.ts` which is then imported into the main component file, `outline-widget.ts` as seen in the following code sample.\n\n```typescript\nimport componentStyles from './outline-widget.css.lit';\n...\n\n@customElement('outline-widget')\nexport class OutlineWidget extends OutlineElement {\n  static styles: CSSResultGroup = [componentStyles];\n  ...\n}\n```\n\n## Inheriting Styles\n\nInterestingly, the above sample is a component, `OutlineWidget`, that extends `OutlineElement`.\nThis component is simply declaring the styles in `OutlineWidget`, and assumes zero style inheritance from the parent component.\nNow, assume that `OutlineElement` provides styles that either should or could be inherited by any component that extends it. If we want to include styles from the parent component, we need to [inherit styles from the superclass](https://lit.dev/docs/components/styles/#inheriting-styles-from-a-superclass).\n\n```typescript\nimport componentStyles from './outline-widget.css.lit';\n...\n\n@customElement('outline-widget')\nexport class OutlineWidget extends OutlineElement {\n  static styles: CSSResultGroup = [ OutlineElement.styles, componentStyles ];\n  ...\n}\n```\n\n## Inline Styles\n\nThe following example shows both importing content from the default `outline-widget.css.lit.ts` file as well as including inline css wrapped in the `css` string literal provided by the `lit` package.\n\n```typescript\nimport { css } from 'lit';\nimport componentStyles from './outline-widget.css.lit';\n\n@customElement('outline-widget')\nexport class OutlineWidget extends OutlineElement {\n  static styles: CSSResultGroup = [\n    componentStyles,\n    css\\`\n      :host { display: block; }\n      p { margin: 0; }\n      h2 { color: ${this.color} }\n    \\`\n  ];\n  ...\n}\n```\n\nAbove, we can see above, the `${this.color}` variable is being used to dynamically\nset the color of the `h2` element.\n\n> The same effect can be accomplished in the `outline-widgets.css` file by conditionally\n> applying custom classes to markup in the `render` method that can be styled with standard CSS.\n\n## Styling with Tailwind CSS\n\nOur components are built with the CSS architecture decoupled from the component functionality.\nThe component markup never utilizes the Tailwind utility classes that are available,\ninstead relying on the `.css` file itself to use the Tailwind `@apply` directive to attach\nstyles to a class or element.\nThis allows us to use as much (or little) of the Tailwind CSS structure as we want,\nand have the ability to transition to other CSS frameworks or methods quickly and easily.\n\nBelow is an example of Tailwind classes from our `outline-link.css` file.\nNotice how the `@apply` directive precedes a list of shorthand Tailwind classes.\nAlso note the [`:host`](https://developer.mozilla.org/en-US/docs/Web/CSS/:host) and [`::slotted`](https://developer.mozilla.org/en-US/docs/Web/CSS/::slotted) selectors. These are very helpful when styling components.\n\n```css\n a {\n  @apply font-body transition-colors duration-300;\n}\n```\n\n[Tailwind CSS documentation](https://tailwindcss.com/docs) is some of the best in the industry to find particular utility classes you may be looking to utililze in your styles.\nTailwind documentation should be referenced at every turn in order to understand the varying impact each utility class may have, and which ones are available.\n\n## Styling with CSS Variables\n\nBelow is an example of CSS Custom Property usage from our `outline-link.css` file.\nIn this instance, we have utilized 3 custom CSS variables to help us alter the color of a link when using the `outline-link` component.\nThe next section will discuss how and where those are declared or overwritten.\n\n```css\na {\n  color: var(--outline-link-color-default);\n}\n```\n\n## CSS Variable Declaration\n\n### Global project variables\n\nOutline defines all of its CSS Variables in `outline.theme.css`. Many of these CSS variables are utilized by Tailwind CSS as can be seen in the `tailwind.config.js` file.\nThis means that if you use Tailwind utility classes, they are using the CSS Variables already associated with the design system, and our design tokens.\nThis ensures that you can adhere to brand guidelines and usage recommendations regardless of how you may choose to architect the CSS or a component or project.\n\nAt a project level, each consumer imports this `outline.theme.css` file globally.\nThis includes Storybook, our simple HTML consumer development environment, as well as Drupal.\n\nAny project should consider adding a project specific CSS Variables file to overwrite only specific properties from Outline, without overriding the variables in `outline.theme.css`.\nAgain, each consumer would need to include this file, immediately following the inclusion of `outline.theme.css`.\nHowever, this separation is only a suggestion, and in theory the `outline.theme.css` file should be safe to be edited much like the `outline.config.js` system configuration.\n\n```css\n:root {\n  ...\n  /* Brand specific primary colors. */\n  --blue-darken-1: #002536;\n  --blue-darken-2: #00374e;\n  --blue-main: #004e70;\n  --blue-lighten-1: #38758f;\n  --blue-lighten-2: #9ebcc9;\n  --blue-lighten-3: #ccdce2;\n  --blue-lighten-4: #e0eaee;\n  --blue-lighten-5: #f0f4f6;\n  ...\n  /* Configuration values for outline-link. */\n  --outline-link-color-default: var(--blue-darken-1);\n  --outline-link-color-hover: var(--blue-lighten-1);\n  --outline-link-color-focus: var(--blue-lighten-1);\n  ...\n}\n```\n\nNote in the above example, the declaration of the `--blue-responsible` color set,\nas well as the configuration for the `outline-link` component.\nThe first set declares the color values as the hex values,\nand the next section associates link colors with a pre-existing CSS variable.\n\n### Component-specific variables\n\nWhen a component uses a CSS variable, it should be defined within that component and given a fallback value.\nVariables are normally defined within a `vars-COMPONENT.css` file within a `css-variables` subfolder of the component source.\nHowever, using the `css-variables` folder is no longer required.\n\nComponent variables must be defined within a `:host` selector. When defining a variable that a project can override globally, the following naming convention should be used:\n\n```css\n:host {\n  --COMPONENT--[VARIANT]-[ELEMENT]-SELECTOR--computed: var(--COMPONENT--[VARIANT]-[ELEMENT]-SELECTOR, FALLBACK);\n}\n```\nwhere\n* `COMPONENT` is the name of the component.\n* `VARIANT` is the optional component variant, such as \"primary\", \"secondary\", etc.\n* `ELEMENT` is the optional HTML element, such as `input` or `h2`, etc\n* `SELECTOR` is the css property selector, with special characters replaced by a single hyphen, such as `color` or `bg-color` or `border-cover-hover` .\n* * States such as `::hover`, `::active` become `-hover` and `-active`.\n* * Selectors such as `input[disabled] border-color` become `input-disabled-border-color` for example, where `input` might be optional if referencing multiple elements (input, textarea, select, etc).\n* * Synonyms for properties such as using `bg` for `background`, `weight` or `fw` for `font-weight`, `radius` for `border-radius` etc, are allowed when the intent is obvious.\nBut avoid when confusing such as with colors (border, background, etc). `color` refers to *text* color since that is the normal CSS property name. See the variable names in Tailwind CSS for other examples. (might update this ADR in the future with an exact list of allowed abbreviations)\n\n* The `--COMPONENT--[VARIANT]-[ELEMENT]-SELECTOR` variable is the value specified in the `outline.theme.css` or project-specific globals file.\n* The `--COMPONENT--[VARIANT]-[ELEMENT]-SELECTOR--computed` is the variable to actually use in your `COMPONENT.css` file.\n* The `FALLBACK` is the default value of the variable, either as a hardcoded css value, or a `var(--VARNAME)` to some other variable defined globally.\nYou must ensure that the FALLBACK value is always defined or the browser will treat rules using this variable as invalid css.\n\nNOTE: The reason for the `--computed` suffix is because CSS variables cannot redefine themselves. And the above naming convention keeps the fallback\nvalue in a single location in the variable definition rather than being used multiple times within the `COMPONENT.css` file itself.\n\nOutline components should always declare all component-specific variables using the guidance above.\nProject-specific components are encouraged to declare all variables but if a variable is only used in a single place within the `COMPONENT.css` then\nusing the `--COMPONENT--[VARIANT]-[ELEMENT]-SELECTOR` global variable without making a `--computed` version is allowed as long as the\nvariable always has a global value or fallback is specified.\n\nFor example:\n```css\n:host {\n  --outline-link--color--computed: var(--outline-link--color, var(--primary-color));\n}\n\na {\n  color: var(--outline-link--color--computed)\n}\n```\n\n## Component Style Generation\n\n#### TODO: Migrate this to Tooling Docs ####\nWe have talked in previous sections about how the `.css` file will get compiled to a `.css.lit.ts` file.\nLet's take a look at a sample of this in action. We will use the `outline-link` component again.\n\nIn this example, we see the combination of the samples we used above, including both Tailwind CSS classes and custom CSS Variables for styling.\n\n### `outline-widget.css`\n\n```css\n:host, a, ::slotted(a) {\n  color: var(--outline-link-color-default);\n}\n```\n\n### `outline-widget.css.lit.ts`\n\n> The following generated file is ignored by default in `.gitignore`, and is generated during all build procedures.\n\n```typescript\nimport { css } from 'lit';\nexport default css`\n/* Apply standardized box sizing to the component. */\n:host {\n  box-sizing: border-box;\n}\n:host *,\n:host *::before,\n:host *::after {\n  box-sizing: inherit;\n}\n/* Apply proper CSS for accessibly hiding elements to each component. */\n.visually-hidden {\n  position: absolute !important;\n  overflow: hidden;\n  clip: rect(1px, 1px, 1px, 1px);\n  width: 1px;\n  height: 1px;\n  word-wrap: normal;\n}\n/* Apply component specific CSS */\n:host,\na,\n::slotted(a){\n  color:var(--outline-link--color);\n}\n`;\n```\n\nThe above `.ts` file is now what we include directly to our `outline-link.ts` component,\nand apply to the `static styles` array. It includes an initial section, applied to all Outline components,\nas well as the second sections which are the styles defined by the `.css` file above.\n\n## Styling Slots\n\nCSS styles from external files will have priority over CSS styles that are done via the `:host` selector.\nNormally you can only target top-level elements in a slot with css (example `::slotted(ul)`).\n\nSince we often use Drupal as a consumer, we cannot control the markup that enters slots. The solutions listed below are based on this premise and allow us to style slot content in a similar way to how we style the component.\n\nWhen you need to style deeper elements within a slot, there are two approaches:\n\n1. Copy the slot content into the Shadow DOM via a SlotController. For more information on this, see [Slots](/docs/documentation-guides-component-development-coding-guide-standards-slots--documentation)\n2. The slot content can be styled via \"global\" CSS rules.\n\n## StyleController Controller ##\n\nScoped CSS rules can be created in a number of ways:\n* **Added to the consumer's global style sheet.** However, you cannot `@import` an existing stylesheet within a scoping selector such as the component name, making it difficult to reuse existing styles in the design system without duplicating styling.\n\n* **Scoped at build time.** Outline supports creating a file named `SCOPE.global.css` where `SCOPE` is the scope selector\nyou wish to add.  For example, `my-component.global.css` will wrap the css rules with the `my-component {}` selector.\nThe build scripts convert this file to `SCOPE.global.scoped.css` and `SCOPE.global.scoped.css.lit.ts` which can be\nimported from another css file, or within your component.ts file. This scoped css can be injected into the\nglobal stylesheet using the `StyleController` controller as discussed below. This method increases the size of\nthe design system JS file to include the scoped css.\n> An example of adding light DOM scoped at build time is the `outline-form` component.\n\n* **Scoped at run time.** The `StyleController` controller mentioned below can automatically scope css rules as they are\nadded to the global stylesheet. This method does not increase the size of the design system, but adds a small\namount of javascript processing time when the component is rendered.\n\n### Using `StyleController` to inject global styles\nRather than relying on the consumer to add global styles, the component itself can inject styles into the global stylesheet\nusing the `StyleController` controller. This controller accepts string of CSS and an optional \"scope\" selector\nand creates a `style` element in the `body` element of the page containing the scoped CSS.\n\nExample using styles scoped at build time (`*.global.css` files):\n```\nimport globalStyles from './my-component.global.scoped.css.lit';\nimport { StyleController } from '@phase2/outline-core';\n...\n  lightDomStyles = new StyleController(this, [globalStyles]);\n```\n\nExample using styles scoped at run time:\n```\nimport componentStyles from './my-component.css.lit';\nimport { StyleController } from '@phase2/outline-core';\n...\n  lightDomStyles = new StyleController(this, [componentStyles], this.tagName.toLowerCase());\n```\n\n> NOTE: When using build-time scoping, you can scope using a class instead of the component name if needed by naming the file `.CLASS.global.css`\n\n> NOTE: Light DOM styles *can* be overridden by the consumer and CSS rules with a higher precedence can also override the basic scoping. You can handle this in the component by creating more specific CSS selectors if you don't have control over the consumer styling causing the conflict.\n\n> NOTE: You can freely mix light DOM styling with normal component styling. For example if styling a `ul/li` list, the `ul` style can be within the component normally using `::slotted(ul)` and the style for the `li` can be added to a `my-component.global.css` file and injected via `lightDomStyles`. This helps minimize the bleeding of consumer styles into the component.\n"],"names":["_createMdxContent","props","_components","_provideComponents","_jsxs","_Fragment","_jsx","Meta","MDXContent","MDXLayout"],"mappings":"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"}