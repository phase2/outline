{"version":3,"file":"outline-modal.stories-a0d6eea6.js","sources":["../../packages/components/@deprecated/outline-modal/src/outline-modal.css.lit.ts","../../packages/components/@deprecated/outline-modal/src/outline-modal.ts"],"sourcesContent":["\nimport { css } from 'lit';\nexport default css`\n/* Apply component specific CSS */\n#overlay {\n  position: fixed;\n  top: 0px;\n  left: 0px;\n  right: 0px;\n  bottom: 0px;\n  z-index: 50;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  --tw-bg-opacity: 0.6;\n  background-color:rgb(0, 0, 0, var(--tw-bg-opacity));\n}\n\n#container {\n  height: 100vh;\n  max-width: 100%;\n  overflow-y: auto;\n  border-radius: 0.125rem;\n  background-color: var(--outline-white);\n}\n\n@media (min-width: 768px) {\n\n  #container {\n    height: auto;\n  }\n\n  #container {\n    max-width: 25vw;\n  }\n}\n\n#container{\n  min-width:320px;\n}\n\n@media (min-width: 768px) {\n\n  #overlay.medium #container {\n    max-width: 50vw;\n  }\n}\n\n#overlay.full-screen #container {\n  height: 100vh;\n}\n\n#overlay.full-screen #container {\n  width: 100vw;\n}\n\n#overlay.full-screen #container {\n  max-width: 100vw;\n}\n\n@media (min-width: 768px) {\n\n  #overlay.full-screen #container {\n    width: 100vw;\n  }\n}\n\n@media (min-width: 768px) {\n\n  #overlay.full-screen #container {\n    max-width: 100vw;\n  }\n}\n\n#header {\n  position: relative;\n  padding-left: 1.5rem;\n  padding-right: 1.5rem;\n  padding-top: 1.5rem;\n}\n\n#close {\n  position: absolute;\n  top: 0.625rem;\n  right: 0.625rem;\n  border-width: 0px;\n  background-color: var(--outline-transparent);\n}\n\n#close:before{\n  content:'\\\\2715';\n}\n\n#main {\n  padding: 1.5rem;\n}\n\n#accessibility-description {\n  display: none;\n}\n`;","import { html, TemplateResult, CSSResultGroup } from 'lit';\nimport { customElement, property, query, state } from 'lit/decorators.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\n\nimport { OutlineElement } from '@phase2/outline-core';\nimport componentStyles from './outline-modal.css.lit';\n\nexport const modalSizes = ['small', 'medium', 'full-screen'] as const;\nexport type ModalSize = (typeof modalSizes)[number];\n\n// This is helpful in testing.\nexport interface OutlineModalInterface extends HTMLElement {\n  isOpen: boolean;\n  shouldForceAction: boolean;\n  size?: ModalSize;\n  open: () => void;\n  close: () => void;\n}\n\n// See https://stackoverflow.com/questions/1599660/which-html-elements-can-receive-focus.\n// @todo make this re-usable across components?\nconst focusableElementSelector = `\n  a[href]:not([tabindex=\"-1\"]),\n  area[href]:not([tabindex=\"-1\"]),\n  input:not([disabled]):not([tabindex=\"-1\"]),\n  select:not([disabled]):not([tabindex=\"-1\"]),\n  textarea:not([disabled]):not([tabindex=\"-1\"]),\n  button:not([disabled]):not([tabindex=\"-1\"]),\n  iframe:not([tabindex=\"-1\"]),\n  [tabindex]:not([tabindex=\"-1\"]),\n  [contentEditable=true]:not([tabindex=\"-1\"])\n`;\n\n/**\n * The Outline Modal component\n * @element outline-modal\n * @slot default - The modal contents\n * @slot outline-modal--trigger - The trigger for the modal\n * @slot outline-modal--header - The header in the modal\n * @slot outline-modal--accessibility-description - The accessibility description which is used by screen readers.\n */\n@customElement('outline-modal')\nexport class OutlineModal\n  extends OutlineElement\n  implements OutlineModalInterface\n{\n  static styles: CSSResultGroup = [componentStyles];\n\n  @property({ attribute: false })\n  isOpen = false;\n\n  /**\n   * If we force the user to take an action, the consumer must provide a way to close the modal on their own.\n   */\n  @property({ type: Boolean })\n  shouldForceAction = false;\n\n  @property({ type: String })\n  size?: ModalSize = 'medium';\n\n  render(): TemplateResult {\n    return html`\n      <div\n        id=\"trigger\"\n        tabindex=\"0\"\n        @click=\"${this.open}\"\n        @keydown=\"${this._handleTriggerKeydown}\"\n      >\n        <slot name=\"outline-modal--trigger\"></slot>\n      </div>\n      ${this._overlayTemplate()}\n    `;\n  }\n\n  @state()\n  _hasHeaderSlot: boolean;\n\n  @state()\n  _hasAccessibilityDescriptionSlot: boolean;\n\n  connectedCallback() {\n    super.connectedCallback();\n    this._handleSlotChange();\n  }\n\n  private _handleSlotChange(): void {\n    this._hasHeaderSlot =\n      this.querySelector('[slot=\"outline-modal--header\"]') !== null;\n    this._hasAccessibilityDescriptionSlot =\n      this.querySelector(\n        '[slot=\"outline-modal--accessibility-description\"]'\n      ) !== null;\n  }\n\n  private _overlayTemplate(): TemplateResult {\n    let template = html``;\n\n    if (this.isOpen) {\n      template = html`\n        <div\n          id=\"overlay\"\n          tabindex=\"-1\"\n          class=\"${this.size}\"\n          @click=\"${this._handleOverlayClick}\"\n          @keydown=\"${this._handleOverlayKeydown}\"\n        >\n          <div\n            id=\"container\"\n            role=\"dialog\"\n            aria-modal=\"true\"\n            aria-labelledby=\"${ifDefined(\n              this._hasHeaderSlot ? 'header' : undefined\n            )}\"\n            aria-describedby=\"${ifDefined(\n              this._hasAccessibilityDescriptionSlot\n                ? 'accessibility-description'\n                : undefined\n            )}\"\n          >\n            <div id=\"header\">\n              <slot\n                id=\"title\"\n                name=\"outline-modal--header\"\n                @slotchange=\"${this._handleSlotChange}\"\n              ></slot>\n              ${this.shouldForceAction\n                ? null\n                : html`\n                    <button\n                      id=\"close\"\n                      aria-label=\"Close modal\"\n                      @click=\"${this.close}\"\n                      @keydown=\"${this._handleCloseKeydown}\"\n                    ></button>\n                  `}\n            </div>\n            <div id=\"main\">\n              <slot></slot>\n            </div>\n          </div>\n        </div>\n        <slot\n          id=\"accessibility-description\"\n          name=\"outline-modal--accessibility-description\"\n          @slotchange=\"${this._handleSlotChange}\"\n        ></slot>\n      `;\n    }\n\n    return template;\n  }\n\n  async open(): Promise<void> {\n    if (!this.isOpen) {\n      this.isOpen = true;\n\n      await this.updateComplete;\n\n      this._focusOnElement();\n\n      this._trapFocus();\n\n      this.dispatchEvent(new CustomEvent('opened'));\n    }\n  }\n\n  async close(): Promise<void> {\n    if (this.isOpen) {\n      this.isOpen = false;\n\n      await this.updateComplete;\n\n      this.dispatchEvent(new CustomEvent('closed'));\n\n      this.triggerElement.focus();\n    }\n  }\n\n  @query('#trigger')\n  private triggerElement!: HTMLDivElement;\n\n  private _handleTriggerKeydown(event: KeyboardEvent): void {\n    if (event.key === 'Enter') {\n      // This prevents a focused element from also triggering.\n      // For example, the modal opens and the \"accept\" button is focused and then triggered and the modal closes.\n      event.preventDefault();\n\n      this.open();\n    }\n  }\n\n  private _handleOverlayClick(event: MouseEvent): void {\n    // Only trigger if we click directly on the event that wants to receive the click.\n    if (\n      event.target === event.currentTarget &&\n      this.shouldForceAction === false\n    ) {\n      this.close();\n    }\n  }\n\n  private _handleOverlayKeydown(event: KeyboardEvent): void {\n    if (event.key === 'Escape' && this.shouldForceAction === false) {\n      this.close();\n    }\n  }\n\n  // For some reason on the `Docs` tab of Storybook, the `click` event for the close button doesn't work with the `Enter` key without also watching the `keyup` event. This isn't the case on the `Canvas` tab.\n  private _handleCloseKeydown(event: KeyboardEvent): void {\n    if (event.key === 'Enter') {\n      this.close();\n    }\n  }\n\n  @query('#close')\n  private closeElement: HTMLDivElement | null;\n\n  @property({ type: String })\n  elementToFocusSelector?: string | undefined;\n\n  private _focusOnElement(): void {\n    const defaultElement = this.shouldForceAction ? null : this.closeElement;\n\n    const attributeDefinedElement =\n      this.elementToFocusSelector !== undefined\n        ? (this.querySelector(\n            this.elementToFocusSelector\n          ) as HTMLElement | null)\n        : null;\n\n    const automaticallySelectedElement = this.querySelector(\n      focusableElementSelector\n    ) as HTMLElement | null;\n\n    const element =\n      attributeDefinedElement ?? automaticallySelectedElement ?? defaultElement;\n\n    if (element !== null) {\n      element.focus();\n    }\n  }\n\n  private _trapFocus(): void {\n    const firstFocusableElement = this.shouldForceAction\n      ? this.firstFocusableSlottedElement\n      : this.closeElement;\n\n    if (firstFocusableElement !== null) {\n      const lastFocusableElement =\n        this.lastFocusableSlottedElement ?? firstFocusableElement;\n\n      lastFocusableElement.addEventListener('keydown', event => {\n        if (event.key === 'Tab' && event.shiftKey === false) {\n          event.preventDefault();\n\n          firstFocusableElement.focus();\n        }\n      });\n\n      firstFocusableElement.addEventListener('keydown', event => {\n        if (event.key === 'Tab' && event.shiftKey) {\n          event.preventDefault();\n\n          lastFocusableElement.focus();\n        }\n      });\n    }\n  }\n\n  private get firstFocusableSlottedElement(): HTMLElement | null {\n    const focusableSlottedElements: NodeListOf<HTMLElement> =\n      this.querySelectorAll(focusableElementSelector);\n\n    return Array.from(focusableSlottedElements).slice(0)[0] ?? null;\n  }\n\n  private get lastFocusableSlottedElement(): HTMLElement | null {\n    const focusableSlottedElements: NodeListOf<HTMLElement> =\n      this.querySelectorAll(focusableElementSelector);\n\n    return Array.from(focusableSlottedElements).slice(-1)[0] ?? null;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'outline-modal': OutlineModal;\n  }\n}\n"],"names":["componentStyles","css","focusableElementSelector","OutlineModal","OutlineElement","html","template","ifDefined","event","defaultElement","attributeDefinedElement","automaticallySelectedElement","element","firstFocusableElement","lastFocusableElement","focusableSlottedElements","__decorateClass","property","state","query","customElement"],"mappings":"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"}