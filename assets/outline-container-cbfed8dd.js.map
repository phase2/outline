{"version":3,"file":"outline-container-cbfed8dd.js","sources":["../../packages/components/@deprecated/outline-container/src/outline-container.css.lit.ts","../../packages/components/@deprecated/outline-container/src/outline-container.ts"],"sourcesContent":["\nimport { css } from 'lit';\nexport default css`\n/* Apply component specific CSS */\n::slotted(*){\n  display:block;\n}\n\n::slotted(*:not(:only-child)){\n  margin-bottom:var(--spacing-2);\n}\n\n.container{\n  --container-padding:1rem;\n\n  width:100%;\n  display:block;\n  margin-right:auto;\n  margin-left:auto;\n\n  padding-right:var(--container-padding);\n  padding-left:var(--container-padding);\n  max-width:calc(\n    var(--container-max-content-width) + 2 * var(--container-padding)\n  );\n}\n\n.container > *{\n    margin-bottom:0;\n    margin-bottom:var(--component-spacing, 0);\n  }\n\n.wide{\n  --container-max-content-width:1660px;\n}\n\n.medium{\n  --container-max-content-width:1088px;\n}\n\n.narrow{\n  --container-max-content-width:864px;\n}\n\n.full{\n  max-width:100%;\n  --container-padding:0;\n}\n\n.justify-start{\n  margin-left:0;\n}\n\n.justify-end{\n  margin-right:0;\n}\n`;","import { CSSResultGroup, TemplateResult, html, css } from 'lit';\nimport { OutlineElement } from '@phase2/outline-core';\nimport { customElement, property } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport componentStyles from './outline-container.css.lit';\n\ntype containerWidths = 'wide' | 'medium' | 'narrow' | 'full';\n\n/**\n * The `outline-container` Web Component.\n *\n * @element outline-container\n *\n * @since 0.0.1\n * @extends OutlineElement\n *\n * @attr container-width - Sets the width of the container. Options are wide, medium, narrow, and full.\n * @attr top-margin - Sets the top margin of the container. Options are none, small, medium, and large.\n * @attr bottom-margin - Sets the bottom margin of the container. Options are none, small, medium, and large.\n * @attr justify-end - Sets the container to justify content to the end.\n * @attr component-spacing - Sets the spacing between components.\n * @prop {string} topMargin - Sets the top margin of the container.\n * @prop {string} bottomMargin - Sets the bottom margin of the container.\n * @prop {boolean} justifyEnd - Sets the container to justify content to the end.\n * @prop {string} containerWidth - Sets the width of the container.\n * @prop {string} componentSpacing - Sets the spacing between components.\n *\n * @slot - Default Slot.\n */\n@customElement('outline-container')\nexport class OutlineContainer extends OutlineElement {\n  static styles: CSSResultGroup = [\n    css`\n      :host {\n        --component-spacing: var(--spacing-6);\n      }\n    `,\n    componentStyles,\n  ];\n  /**\n   * The vertical space from the component above it (using Utopia fluid space variables defined in outline.theme.css, ie. space-3xl)\n   **/\n  @property({\n    type: String,\n    reflect: true,\n    attribute: 'top-margin',\n  })\n  topMargin: string;\n\n  @property({\n    type: String,\n    reflect: true,\n    attribute: 'bottom-margin',\n  })\n  bottomMargin: string;\n\n  @property({\n    type: String,\n    reflect: true,\n    attribute: 'child-spacing',\n  })\n  childSpacing: string;\n\n  @property({\n    type: Boolean,\n    reflect: true,\n    attribute: 'justify-end',\n  })\n  justifyEnd = false;\n\n  @property({\n    type: Boolean,\n    reflect: true,\n    attribute: 'justify-start',\n  })\n  justifyStart = false;\n\n  @property({\n    type: String,\n    reflect: true,\n    attribute: 'container-width',\n  })\n  containerWidth: containerWidths = 'wide';\n\n  render(): TemplateResult {\n    const containerWidth = this.containerWidth;\n    const classes = {\n      'container': true,\n      [containerWidth]: true,\n      'justify-end': this.justifyEnd,\n      'justify-start': this.justifyStart,\n    };\n    return html`\n      ${this.topMargin || this.bottomMargin\n        ? html` <style>\n            .container {\n              margin-top: var(--${this.topMargin});\n              margin-bottom: var(--${this.bottomMargin});\n            }\n          </style>`\n        : ''}\n      <div class=${classMap(classes)}>\n        <slot></slot>\n      </div>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'outline-container': OutlineContainer;\n  }\n}\n"],"names":["componentStyles","css","OutlineContainer","OutlineElement","classes","html","classMap","__decorateClass","property","customElement"],"mappings":"4MAEA,MAAAA,EAAeC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,kMC4BF,IAAAC,EAAN,cAA+BC,CAAe,CAA9C,aAAA,CAAA,MAAA,GAAA,SAAA,EAsCQ,KAAA,WAAA,GAOE,KAAA,aAAA,GAOmB,KAAA,eAAA,MAAA,CAElC,QAAyB,CAEvB,MAAMC,EAAU,CACd,UAAa,GACb,CAHqB,KAAK,cAGX,EAAG,GAClB,cAAe,KAAK,WACpB,gBAAiB,KAAK,YAAA,EAEjB,OAAAC;AAAAA,QACH,KAAK,WAAa,KAAK,aACrBA;AAAAA;AAAAA,kCAEwB,KAAK,SAAS;AAAA,qCACX,KAAK,YAAY;AAAA;AAAA,oBAG5C,EAAE;AAAA,mBACOC,EAASF,CAAO,CAAC;AAAA;AAAA;AAAA,KAIlC,CACF,EA5EaF,EACJ,OAAyB,CAC9BD;AAAAA;AAAAA;AAAAA;AAAAA,MAKAD,CACF,EASAO,EAAA,CALCC,EAAS,CACR,KAAM,OACN,QAAS,GACT,UAAW,YAAA,CACZ,CAAA,EAhBUN,EAiBX,UAAA,YAAA,CAAA,EAOAK,EAAA,CALCC,EAAS,CACR,KAAM,OACN,QAAS,GACT,UAAW,eAAA,CACZ,CAAA,EAvBUN,EAwBX,UAAA,eAAA,CAAA,EAOAK,EAAA,CALCC,EAAS,CACR,KAAM,OACN,QAAS,GACT,UAAW,eAAA,CACZ,CAAA,EA9BUN,EA+BX,UAAA,eAAA,CAAA,EAOAK,EAAA,CALCC,EAAS,CACR,KAAM,QACN,QAAS,GACT,UAAW,aAAA,CACZ,CAAA,EArCUN,EAsCX,UAAA,aAAA,CAAA,EAOAK,EAAA,CALCC,EAAS,CACR,KAAM,QACN,QAAS,GACT,UAAW,eAAA,CACZ,CAAA,EA5CUN,EA6CX,UAAA,eAAA,CAAA,EAOAK,EAAA,CALCC,EAAS,CACR,KAAM,OACN,QAAS,GACT,UAAW,iBAAA,CACZ,CAAA,EAnDUN,EAoDX,UAAA,iBAAA,CAAA,EApDWA,EAANK,EAAA,CADNE,EAAc,mBAAmB,CAAA,EACrBP,CAAA"}