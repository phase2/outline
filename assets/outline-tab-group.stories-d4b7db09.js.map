{"version":3,"file":"outline-tab-group.stories-d4b7db09.js","sources":["../../packages/outline-core/src/internal/offset.ts","../../packages/outline-core/src/internal/scroll.ts","../../packages/components/@deprecated/outline-tabs/src/outline-tab/outline-tab.css.lit.ts","../../packages/components/@deprecated/outline-tabs/src/outline-tab/outline-tab.ts","../../packages/components/@deprecated/outline-tabs/src/outline-tab-panel/outline-tab-panel.ts","../../packages/components/@deprecated/outline-tabs/src/outline-tab-group/outline-tab-group.css.lit.ts","../../packages/components/@deprecated/outline-tabs/src/outline-tab-group/outline-tab-group.ts"],"sourcesContent":["//\n// Returns an element's offset relative to its parent. Similar to element.offsetTop and element.offsetLeft, except the\n// parent doesn't have to be positioned relative or absolute.\n//\n// NOTE: This was created to work around what appears to be a bug in Chrome where a slotted element's offsetParent\n// seems to ignore elements inside the surrounding shadow DOM: https://bugs.chromium.org/p/chromium/issues/detail?id=920069\n//\nexport function getOffset(element: HTMLElement, parent: HTMLElement) {\n  return {\n    top: Math.round(\n      element.getBoundingClientRect().top - parent.getBoundingClientRect().top\n    ),\n    left: Math.round(\n      element.getBoundingClientRect().left - parent.getBoundingClientRect().left\n    ),\n  };\n}\n","import { getOffset } from './offset';\n\nconst locks = new Set();\n\n//\n// Prevents body scrolling. Keeps track of which elements requested a lock so multiple levels of locking are possible\n// without premature unlocking.\n//\nexport function lockBodyScrolling(lockingEl: HTMLElement) {\n  locks.add(lockingEl);\n  document.body.classList.add('outline-scroll-lock');\n}\n\n//\n// Unlocks body scrolling. Scrolling will only be unlocked once all elements that requested a lock call this method.\n//\nexport function unlockBodyScrolling(lockingEl: HTMLElement) {\n  locks.delete(lockingEl);\n\n  if (locks.size === 0) {\n    document.body.classList.remove('outline-scroll-lock');\n  }\n}\n\n//\n// Scrolls an element into view of its container. If the element is already in view, nothing will happen.\n//\nexport function scrollIntoView(\n  element: HTMLElement,\n  container: HTMLElement,\n  direction: 'horizontal' | 'vertical' | 'both' = 'vertical',\n  behavior: 'smooth' | 'auto' = 'smooth'\n) {\n  const offset = getOffset(element, container);\n  const offsetTop = offset.top + container.scrollTop;\n  const offsetLeft = offset.left + container.scrollLeft;\n  const minX = container.scrollLeft;\n  const maxX = container.scrollLeft + container.offsetWidth;\n  const minY = container.scrollTop;\n  const maxY = container.scrollTop + container.offsetHeight;\n\n  if (direction === 'horizontal' || direction === 'both') {\n    if (offsetLeft < minX) {\n      container.scrollTo({ left: offsetLeft, behavior });\n    } else if (offsetLeft + element.clientWidth > maxX) {\n      container.scrollTo({\n        left: offsetLeft - container.offsetWidth + element.clientWidth,\n        behavior,\n      });\n    }\n  }\n\n  if (direction === 'vertical' || direction === 'both') {\n    if (offsetTop < minY) {\n      container.scrollTo({ top: offsetTop, behavior });\n    } else if (offsetTop + element.clientHeight > maxY) {\n      container.scrollTo({\n        top: offsetTop - container.offsetHeight + element.clientHeight,\n        behavior,\n      });\n    }\n  }\n}\n","\nimport { css } from 'lit';\nexport default css`\n/* Apply component specific CSS */\n:host {\n  display: inline-block;\n  cursor: pointer;\n}\n\n:host([disabled]) {\n  cursor: not-allowed;\n}\n\n.tab {\n  pointer-events: none;\n  margin-bottom: 0.125rem;\n  display: block;\n  -webkit-user-select: none;\n          user-select: none;\n  white-space: nowrap;\n  border-radius: 0.25rem;\n  border-bottom-width: 2px;\n  border-color: var(--outline-gray-600);\n  background-repeat: no-repeat;\n  padding-top: 2rem;\n  padding-bottom: 2rem;\n  padding-left: 1.5rem;\n  padding-right: 9rem;\n  font-family: var(--ff-body);\n  font-size: var(--fs-xl);\n  line-height: var(--lh-xl);\n  font-weight: var(--fw-medium);\n  color: var(--outline-gray-600);\n}\n\n@media (min-width: 1024px) {\n\n  .tab {\n    font-size: var(--fs-2xl);\n    line-height: var(--lh-2xl);\n  }\n}\n\n.tab{\n  background-image:url(\"data:image/svg+xml,%3Csvg width='12' height='22' viewBox='0 0 12 22' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M11.6036 10.3964L1.4449 0.237629C1.10859 -0.0871735 0.572681 -0.0778466 0.247879 0.258463C-0.0689857 0.586538 -0.0689856 1.10663 0.247879 1.43465L9.8081 10.9949L0.247879 20.5551C-0.0826265 20.8857 -0.0826265 21.4216 0.247879 21.7521C0.578485 22.0826 1.11435 22.0826 1.4449 21.7521L11.6036 11.5934C11.9341 11.2628 11.9341 10.7269 11.6036 10.3964Z' fill='%23363739'/%3E%3C/svg%3E%0A\");\n  background-position:calc(100% - 24px) 50%;\n}\n\n.tab:hover:not(.tab--disabled) {\n  color: var(--outline-gray-100);\n}\n\n.tab:focus {\n  outline: 2px solid transparent;\n  outline-offset: 2px;\n}\n\n.tab:focus:not(.tab--disabled), .tab:focus-visible:not(.tab--disabled) {\n  background-color: var(--outline-blue-100);\n  color: var(--outline-blue-600);\n  --tw-shadow: inset 0 2px 4px 0 rgb(0 0 0 / 0.05);\n  --tw-shadow-colored: inset 0 2px 4px 0 var(--tw-shadow-color);\n  box-shadow: 0 0 #0000, 0 0 #0000, var(--tw-shadow);\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\n}\n\n.tab.tab--active:not(.tab--disabled) {\n  background-color: var(--outline-gray-100);\n  color: var(--outline-blue-600);\n  background-image:url(\"data:image/svg+xml,%3Csvg width='12' height='22' viewBox='0 0 12 22' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M11.6036 10.3964L1.4449 0.237629C1.10859 -0.0871735 0.572681 -0.0778466 0.247879 0.258463C-0.0689857 0.586538 -0.0689856 1.10663 0.247879 1.43465L9.8081 10.9949L0.247879 20.5551C-0.0826265 20.8857 -0.0826265 21.4216 0.247879 21.7521C0.578485 22.0826 1.11435 22.0826 1.4449 21.7521L11.6036 11.5934C11.9341 11.2628 11.9341 10.7269 11.6036 10.3964Z' fill='%23056CB6'/%3E%3C/svg%3E%0A\");\n}\n\n.tab.tab--disabled {\n  cursor: not-allowed;\n  opacity: 0.5;\n}\n`;","import { CSSResultGroup, html } from 'lit';\nimport { customElement, property, query } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\n\nimport { OutlineElement } from '@phase2/outline-core';\nimport componentStyles from './outline-tab.css.lit';\n\nlet id = 0;\n\n/**\n * @slot - The tab's label.\n *\n * @csspart base - The component's base wrapper.\n */\n@customElement('outline-tab')\nexport class OutlineTab extends OutlineElement {\n  static styles: CSSResultGroup = [componentStyles];\n\n  @query('.tab') tab: HTMLElement;\n\n  private componentId = `tab-${++id}`;\n\n  /** The name of the tab panel the tab will control. The panel must be located in the same tab group. */\n  @property() panel = '';\n\n  /** Draws the tab in an active state. */\n  @property({ type: Boolean, reflect: true }) active = false;\n\n  /** Draws the tab in a disabled state. */\n  @property({ type: Boolean, reflect: true }) disabled = false;\n\n  /** Sets focus to the tab. */\n  focus(options?: FocusOptions) {\n    this.tab.focus(options);\n  }\n\n  /** Removes focus from the tab. */\n  blur() {\n    this.tab.blur();\n  }\n\n  render() {\n    // If the user didn't provide an ID, we'll set one so we can link tabs and tab panels with aria labels\n    this.id = this.id || this.componentId;\n\n    return html`\n      <div\n        part=\"base\"\n        class=${classMap({\n          'tab': true,\n          'tab--active': this.active,\n          'tab--disabled': this.disabled,\n        })}\n        role=\"tab\"\n        aria-disabled=${this.disabled ? 'true' : 'false'}\n        aria-selected=${this.active ? 'true' : 'false'}\n        tabindex=${this.disabled || !this.active ? '-1' : '0'}\n      >\n        <slot> </slot>\n      </div>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'outline-tab': OutlineTab;\n  }\n}\n","import { html } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { OutlineElement } from '@phase2/outline-core';\n\nlet id = 0;\n\n/**\n * @slot - The tab panel's content.\n *\n * @csspart base - The component's base wrapper.\n */\n@customElement('outline-tab-panel')\nexport class OutlineTabPanel extends OutlineElement {\n  private componentId = `tab-panel-${++id}`;\n\n  /** The tab panel's name. */\n  @property() name = '';\n\n  /** When true, the tab panel will be shown. */\n  @property({ type: Boolean, reflect: true }) active = false;\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.id = this.id || this.componentId;\n  }\n\n  render() {\n    this.style.display = this.active ? 'block' : 'none';\n\n    return html`\n      <div\n        part=\"base\"\n        class=\"tab-panel\"\n        role=\"tabpanel\"\n        aria-selected=${this.active ? 'true' : 'false'}\n        aria-hidden=${this.active ? 'false' : 'true'}\n      >\n        <slot></slot>\n      </div>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'outline-tab-panel': OutlineTabPanel;\n  }\n}\n","\nimport { css } from 'lit';\nexport default css`\n/* Apply component specific CSS */\n:host {\n  display: block;\n}\n\n.tab-group {\n  display: flex;\n  border-width: 1px;\n  border-color: var(--outline-transparent);\n}\n\n.tab-group .tab-group__tabs {\n  position: relative;\n  display: flex;\n}\n\n.tab-group .tab-group__indicator {\n  position: absolute;\n  left: 0px;\n  transition-property: all;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  transition-duration: 150ms;\n}\n\n.tab-group--start {\n  flex-direction: row;\n}\n\n.tab-group--start .tab-group__nav-container {\n  order: 1;\n  border-width: 1px;\n  border-bottom-color: var(--outline-gray-100);\n}\n\n.tab-group--start .tab-group__tabs{\n  flex:0 0 auto;\n  flex-direction:column;\n}\n\n.tab-group--start .tab-group__indicator{\n  right:calc(-1 * 2px);\n  border-bottom:0;\n}\n\n.tab-group--start .tab-group__body {\n  order: 2;\n  padding-top: 1rem;\n  padding-bottom: 1rem;\n  padding-left: 1.5rem;\n  padding-right: 1.5rem;\n  flex:1 1 auto;\n}\n\n.tab-group--top {\n  flex-direction: column;\n}\n\n.tab-group--top .tab-group__nav-container {\n  order: 1;\n}\n\n.tab-group--top .tab-group__nav {\n  display: flex;\n  overflow-x: auto;\n  scrollbar-width:none;\n}\n\n.tab-group--top .tab-group__nav::-webkit-scrollbar {\n  height: 0px;\n  width: 0px;\n}\n\n.tab-group--top .tab-group__tabs {\n  position: relative;\n  margin-bottom: 2rem;\n  display: flex;\n  flex-direction: row;\n  border-width: 1px;\n  border-bottom-color: var(--outline-gray-600);\n}\n\n.tab-group--top .tab-group__tabs .tab {\n  padding-right: 1.5rem;\n  background-image:none;\n}\n\n.tab-group--top .tab-group__indicator{\n  bottom:-2px;\n}\n\n.tab-group--top .tab-group__body {\n  order: 2;\n}\n`;","import { CSSResultGroup, html } from 'lit';\nimport { customElement, property, query } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\n\nimport {\n  OutlineElement,\n  MobileController,\n  emit,\n  watch,\n  getOffset,\n  scrollIntoView,\n} from '@phase2/outline-core';\n\nimport { OutlineTab } from '../outline-tab/outline-tab';\nimport { OutlineTabPanel } from '../outline-tab-panel/outline-tab-panel';\nimport componentStyles from './outline-tab-group.css.lit';\n\n/**\n * @slot - Used for grouping tab panels in the tab group.\n * @slot nav - Used for grouping tabs in the tab group.\n *\n * @event {{ name: String }} outline-tab-show - Emitted when a tab is shown.\n * @event {{ name: String }} outline-tab-hide - Emitted when a tab is hidden.\n *\n * @csspart base - The component's base wrapper.\n * @csspart nav - The tab group navigation container.\n * @csspart tabs - The container that wraps the slotted tabs.\n * @csspart active-tab-indicator - An element that displays the currently selected tab. This is a child of the tabs container.\n * @csspart body - The tab group body where tab panels are slotted in.\n */\n@customElement('outline-tab-group')\nexport class OutlineTabGroup extends OutlineElement {\n  static styles: CSSResultGroup = [componentStyles];\n\n  @query('.tab-group') tabGroup: HTMLElement;\n  @query('.tab-group__body') body: HTMLElement;\n  @query('.tab-group__nav') nav: HTMLElement;\n  @query('.tab-group__indicator') indicator: HTMLElement;\n\n  private mobileController = new MobileController(this);\n  private activeTab: OutlineTab;\n  private mutationObserver: MutationObserver;\n  private resizeObserver: ResizeObserver;\n  private tabs: OutlineTab[] = [];\n  private panels: OutlineTabPanel[] = [];\n\n  /** The placement of the tabs. */\n  @property({ type: String, reflect: true, attribute: 'placement' }) placement:\n    | 'top'\n    | 'bottom'\n    | 'start'\n    | 'end' = 'start';\n\n  /**\n   * When set to auto, navigating tabs with the arrow keys will instantly show the corresponding tab panel. When set to\n   * manual, the tab will receive focus but will not show until the user presses spacebar or enter.\n   */\n  @property() activation: 'auto' | 'manual' = 'auto';\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    window.addEventListener('resize', this._handleResize);\n\n    this.resizeObserver = new ResizeObserver(() => {\n      if (!this.mobileController.isMobile) {\n        this.preventIndicatorTransition();\n        this.repositionIndicator();\n      }\n    });\n\n    this.mutationObserver = new MutationObserver(mutations => {\n      // Update aria labels when the DOM changes\n      if (\n        mutations.some(\n          m =>\n            !['aria-labelledby', 'aria-controls'].includes(\n              m.attributeName as string\n            )\n        )\n      ) {\n        setTimeout(() => this.setAriaLabels());\n      }\n\n      // Sync tabs when disabled states change\n      if (mutations.some(m => m.attributeName === 'disabled')) {\n        this.syncTabsAndPanels();\n      }\n    });\n\n    if (!this.mobileController.isMobile) {\n      this.updateComplete.then(() => {\n        this.syncTabsAndPanels();\n        this.mutationObserver.observe(this, {\n          attributes: true,\n          childList: true,\n          subtree: true,\n        });\n        this.resizeObserver.observe(this.nav);\n\n        // Set initial tab state when the tabs first become visible\n        this.intersectionObserver();\n      });\n    }\n  }\n\n  disconnectedCallback() {\n    this.mutationObserver.disconnect();\n    this.resizeObserver.unobserve(this.nav);\n    window.removeEventListener('resize', this._handleResize);\n  }\n\n  _handleResize = () => {\n    if (!this.mobileController.isMobile) {\n      this.intersectionObserver();\n    }\n  };\n\n  intersectionObserver() {\n    const intersectionObserver = new IntersectionObserver(\n      (entries, observer) => {\n        if (entries[0].intersectionRatio > 0) {\n          this.setAriaLabels();\n          this.setActiveTab(this.getActiveTab() || this.tabs[0], {\n            emitEvents: false,\n          });\n          observer.unobserve(entries[0].target);\n        }\n      }\n    );\n    intersectionObserver.observe(this.tabGroup);\n  }\n\n  /** Shows the specified tab panel. */\n  show(panel: string) {\n    const tab = this.tabs.find(el => el.panel === panel) as OutlineTab;\n\n    if (tab) {\n      this.setActiveTab(tab, { scrollBehavior: 'smooth' });\n    }\n  }\n\n  getAllTabs(includeDisabled = false) {\n    const slot = this.shadowRoot!.querySelector(\n      'slot[name=\"nav\"]'\n    ) as HTMLSlotElement;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return [...slot.assignedElements()].filter((el: any) => {\n      return includeDisabled\n        ? el.tagName.toLowerCase() === 'outline-tab'\n        : el.tagName.toLowerCase() === 'outline-tab' && !el.disabled;\n    }) as OutlineTab[];\n  }\n\n  getAllPanels() {\n    const slot = this.body.querySelector('slot')!;\n    return [...slot.assignedElements()].filter(\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (el: any) => el.tagName.toLowerCase() === 'outline-tab-panel'\n    ) as [OutlineTabPanel];\n  }\n\n  getActiveTab() {\n    return this.tabs.find(el => el.active);\n  }\n\n  handleClick(event: MouseEvent) {\n    const target = event.target as HTMLElement;\n    const tab = target.closest('outline-tab') as OutlineTab;\n    const tabGroup = tab?.closest('outline-tab-group');\n\n    // Ensure the target tab is in this tab group\n    if (tabGroup !== this) {\n      return;\n    }\n\n    if (tab) {\n      this.setActiveTab(tab, { scrollBehavior: 'smooth' });\n    }\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    const target = event.target as HTMLElement;\n    const tab = target.closest('outline-tab') as OutlineTab;\n    const tabGroup = tab?.closest('outline-tab-group');\n\n    // Ensure the target tab is in this tab group\n    if (tabGroup !== this) {\n      return;\n    }\n\n    // Activate a tab\n    if (['Enter', ' '].includes(event.key)) {\n      if (tab) {\n        this.setActiveTab(tab, { scrollBehavior: 'smooth' });\n        event.preventDefault();\n      }\n    }\n\n    // Move focus left or right\n    if (\n      [\n        'ArrowLeft',\n        'ArrowRight',\n        'ArrowUp',\n        'ArrowDown',\n        'Home',\n        'End',\n      ].includes(event.key)\n    ) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const activeEl = document.activeElement as any;\n\n      if (activeEl && activeEl.tagName.toLowerCase() === 'outline-tab') {\n        let index = this.tabs.indexOf(activeEl);\n\n        if (event.key === 'Home') {\n          index = 0;\n        } else if (event.key === 'End') {\n          index = this.tabs.length - 1;\n        } else if (\n          (['top', 'bottom'].includes(this.placement) &&\n            event.key === 'ArrowLeft') ||\n          (['start', 'end'].includes(this.placement) && event.key === 'ArrowUp')\n        ) {\n          index = Math.max(0, index - 1);\n        } else if (\n          (['top', 'bottom'].includes(this.placement) &&\n            event.key === 'ArrowRight') ||\n          (['start', 'end'].includes(this.placement) &&\n            event.key === 'ArrowDown')\n        ) {\n          index = Math.min(this.tabs.length - 1, index + 1);\n        }\n\n        this.tabs[index].focus({ preventScroll: true });\n\n        if (this.activation === 'auto') {\n          this.setActiveTab(this.tabs[index], { scrollBehavior: 'smooth' });\n        }\n\n        if (['top', 'bottom'].includes(this.placement)) {\n          scrollIntoView(this.tabs[index], this.nav, 'horizontal');\n        }\n\n        event.preventDefault();\n      }\n    }\n  }\n\n  handleScrollToStart() {\n    this.nav.scroll({\n      left: this.nav.scrollLeft - this.nav.clientWidth,\n      behavior: 'smooth',\n    });\n  }\n\n  handleScrollToEnd() {\n    this.nav.scroll({\n      left: this.nav.scrollLeft + this.nav.clientWidth,\n      behavior: 'smooth',\n    });\n  }\n\n  setActiveTab(\n    tab: OutlineTab,\n    options?: { emitEvents?: boolean; scrollBehavior?: 'auto' | 'smooth' }\n  ) {\n    options = Object.assign(\n      {\n        emitEvents: true,\n        scrollBehavior: 'auto',\n      },\n      options\n    );\n\n    if (tab && tab !== this.activeTab && !tab.disabled) {\n      const previousTab = this.activeTab;\n      this.activeTab = tab;\n\n      // Sync active tab and panel\n      this.tabs.map(el => (el.active = el === this.activeTab));\n      this.panels.map(el => (el.active = el.name === this.activeTab.panel));\n      this.syncIndicator();\n\n      if (['top', 'bottom'].includes(this.placement)) {\n        scrollIntoView(\n          this.activeTab,\n          this.nav,\n          'horizontal',\n          options.scrollBehavior\n        );\n      }\n\n      // Emit events\n      if (options.emitEvents) {\n        if (previousTab) {\n          emit(this, 'outline-tab-hide', {\n            detail: { name: previousTab.panel },\n          });\n        }\n\n        emit(this, 'outline-tab-show', {\n          detail: { name: this.activeTab.panel },\n        });\n      }\n    }\n  }\n\n  setAriaLabels() {\n    // Link each tab with its corresponding panel\n    this.tabs.map(tab => {\n      const panel = this.panels.find(\n        el => el.name === tab.panel\n      ) as OutlineTabPanel;\n      if (panel) {\n        tab.setAttribute('aria-controls', panel.getAttribute('id') as string);\n        panel.setAttribute('aria-labelledby', tab.getAttribute('id') as string);\n      }\n    });\n  }\n\n  @watch('placement')\n  syncIndicator() {\n    if (this.indicator) {\n      const tab = this.getActiveTab();\n\n      if (tab) {\n        this.indicator.style.display = 'block';\n        this.repositionIndicator();\n      } else {\n        this.indicator.style.display = 'none';\n        return;\n      }\n    }\n  }\n\n  repositionIndicator() {\n    const currentTab = this.getActiveTab();\n\n    if (!currentTab) {\n      return;\n    }\n\n    const width = currentTab.clientWidth;\n    const height = currentTab.clientHeight;\n    const offset = getOffset(currentTab, this.nav);\n    const offsetTop = offset.top + this.nav.scrollTop;\n    const offsetLeft = offset.left + this.nav.scrollLeft;\n\n    switch (this.placement) {\n      case 'top':\n      case 'bottom':\n        this.indicator.style.width = `${width}px`;\n        this.indicator.style.height = 'auto';\n        this.indicator.style.transform = `translateX(${offsetLeft}px)`;\n        break;\n\n      case 'start':\n      case 'end':\n        this.indicator.style.width = 'auto';\n        this.indicator.style.height = `${height}px`;\n        this.indicator.style.transform = `translateY(${offsetTop}px)`;\n        break;\n    }\n  }\n\n  // In some orientations, when the component is resized, the indicator's position will change causing it to animate\n  // while you resize. Calling this method will prevent the transition from running on resize, which feels more natural.\n  preventIndicatorTransition() {\n    if (!this.mobileController.isMobile) {\n      const transitionValue = this.indicator.style.transition;\n      this.indicator.style.transition = 'none';\n\n      requestAnimationFrame(() => {\n        this.indicator.style.transition = transitionValue;\n      });\n    }\n  }\n\n  // This stores tabs and panels so we can refer to a cache instead of calling querySelectorAll() multiple times.\n  syncTabsAndPanels() {\n    if (!this.mobileController.isMobile) {\n      this.tabs = this.getAllTabs();\n      this.panels = this.getAllPanels();\n    }\n    this.syncIndicator();\n  }\n\n  render() {\n    return html`${this.mobileController.isMobile\n      ? html`<slot name=\"accordion-wrapper\"></slot> `\n      : html`<div\n          part=\"base\"\n          class=${classMap({\n            'tab-group': true,\n            'tab-group--top': this.placement === 'top',\n            'tab-group--bottom': this.placement === 'bottom',\n            'tab-group--start': this.placement === 'start',\n            'tab-group--end': this.placement === 'end',\n          })}\n          @click=${this.handleClick}\n          @keydown=${this.handleKeyDown}\n        >\n          <div class=\"tab-group__nav-container\">\n            <div part=\"nav\" class=\"tab-group__nav\">\n              <div part=\"tabs\" class=\"tab-group__tabs\" role=\"tablist\">\n                <div\n                  part=\"active-tab-indicator\"\n                  class=\"tab-group__indicator\"\n                ></div>\n                <slot name=\"nav\" @slotchange=${this.syncTabsAndPanels}></slot>\n              </div>\n            </div>\n          </div>\n          <div part=\"body\" class=\"tab-group__body\">\n            <slot @slotchange=${this.syncTabsAndPanels}></slot>\n          </div>\n        </div>`} `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'outline-tab-group': OutlineTabGroup;\n  }\n}\n"],"names":["getOffset","element","parent","scrollIntoView","container","direction","behavior","offset","offsetTop","offsetLeft","minX","maxX","minY","maxY","componentStyles$1","css","id","OutlineTab","OutlineElement","options","html","classMap","componentStyles","__decorateClass","query","property","customElement","OutlineTabPanel","OutlineTabGroup","MobileController","mutations","m","entries","observer","panel","tab","el","includeDisabled","event","activeEl","index","previousTab","emit","currentTab","width","height","transitionValue","watch"],"mappings":"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"}