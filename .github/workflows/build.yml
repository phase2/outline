# Build Workflows for Outline.js
name: Outline Core Build
# Controls when the action will run. Triggers the workflow on push or pull request
on:
  # Which branches to test on push/merge.
  push:
    branches:
      - release
      - main
      - next
      - dev
      - alpha
      - beta
      - rc
  # Which branches to test on pull request.
  pull_request:
    branches:
      - release
      - main
      - next
      - dev
      - alpha
      - beta
      - rc
      - /^issue/
      - /^task/
      - /^feature/
      - /^bug/
      - /^test/

# The jobs for the build workflow.
jobs:
  # Basic setup job to prepare codebase.
  setup:
    name: Install Codebase
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # The node versions to test against.
        node: [ 16, 18 ]
    # The steps for the setup job.
    steps:
      # @see https://github.com/marketplace/actions/checkout
      - name: Checkout Codebase
        uses: actions/checkout@v3 

      # @see https://github.com/marketplace/actions/setup-node-js-environment
      - uses: actions/setup-node@v3
        with:
          # The node version to use.
          node-version: ${{ matrix.node }}
          cache: 'yarn',
          cache-dependency-path: 'yarn.lock'
          # The registry to use by default for package publishing.
          registry-url: 'https://npm.pkg.github.com'
          # Defaults to the user or organization that owns the workflow file
          scope: '@phase2'

      - name: Initialize .npmrc
        run: cp $NPM_CONFIG_USERCONFIG .npmrc

      - name: Install
        run: yarn install --check-cache
        env: 
          NODE_AUTH_TOKEN: ${{ secrets.NPM_GITHUB_PACKAGES }}

  # Job to run build, and basic assurances the codebase is ready for additional processing.
  build_outline:
    name: Build Outline Codebase
    runs-on: ubuntu-latest
    needs: ['setup']
    strategy:
      matrix:
        node: [ 16, 18 ]
    # The steps for the setup job.
    steps:
      # @see https://github.com/marketplace/actions/checkout
      - name: Checkout Codebase
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'yarn',
          cache-dependency-path: 'yarn.lock'
          # The registry to use by default for package publishing.
          registry-url: 'https://npm.pkg.github.com'
          # Defaults to the user or organization that owns the workflow file
          scope: '@phase2'

      - name: Install
        run: yarn install --prefer-offline

      - name: Build from cache
        run: yarn build

      - name: Build Storybook
        run: yarn storybook:build

  # # Test initialization of a new project
  # build_project:
  #   name: Initialize and Test Build of Project Codebase
  #   runs-on: ubuntu-latest
  #   needs: ['build_outline']
  #   strategy:
  #     matrix:
  #       node: [ 16, 18 ]
  #   # The steps for the setup job.
  #   steps:
  #     # @see https://github.com/marketplace/actions/checkout
  #     - name: Checkout Codebase
  #       uses: actions/checkout@v3

  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: ${{ matrix.node }}
  #         cache: 'yarn',
  #         cache-dependency-path: 'yarn.lock'
  #         # The registry to use by default for package publishing.
  #         registry-url: 'https://npm.pkg.github.com'
  #         # Defaults to the user or organization that owns the workflow file
  #         scope: '@phase2'

  #     - name: Install
  #       run: yarn install --prefer-offline

  #     - name: Build from cache
  #       run: yarn build

  #     - name: Generate a project
  #       run: |
  #         PROJDIR=$(mktemp -d)
  #         cd $PROJDIR
  #         npx ${{ github.workspace }}/packages/outline-cli init -a -l -s prj
  #         cd prj
  #         yarn install --prefer-offline
  #         yarn build
  #         yarn storybook:build

  # Job to run package publishing process.
  test:
    name: Test Codebase
    runs-on: ubuntu-latest
    needs: ['setup']
    strategy:
      matrix:
        node: [ 16, 18 ]
    # The steps for the setup job.
    steps:
      # @see https://github.com/marketplace/actions/checkout
      - name: Checkout Codebase
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'yarn',
          cache-dependency-path: 'yarn.lock'
          # The registry to use by default for package publishing.
          registry-url: 'https://npm.pkg.github.com'
          # Defaults to the user or organization that owns the workflow file
          scope: '@phase2'

      - name: Install
        run: yarn install --prefer-offline

      - name: Build Outline
        run: yarn build

      - name: Run eslint
        run: yarn lint:eslint

      - name: Run prettier
        run: yarn lint:prettier

      - name: Build Storybook
        run: yarn storybook:build

  # Basic setup job to prepare codebase.
  deploy-github-pages:
    name: "Publish: GitHub Pages"
    if: github.ref == 'refs/heads/next'
    runs-on: ubuntu-latest
    needs: ['setup', 'build_outline', 'test']
    strategy:
      matrix:
        node: [ 16 ]

    # The steps for the setup job.
    steps:
      # @see https://github.com/marketplace/actions/checkout
      - name: Checkout codebase
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'yarn',
          cache-dependency-path: 'yarn.lock'
          # The registry to use by default for package publishing.
          registry-url: 'https://npm.pkg.github.com'
          # Defaults to the user or organization that owns the workflow file
          scope: '@phase2'

      - name: Install
        run: yarn install --prefer-offline

      - name: Build Outline
        run: yarn build

      - name: Build Storybook
        run: yarn storybook:build

      - name: Check GitHub Pages status
        uses: crazy-max/ghaction-github-status@v3
        with:
          pages_threshold: major_outage

      - name: Deploy to GitHub Pages
        if: success()
        uses: crazy-max/ghaction-github-pages@v3
        with:
          target_branch: gh-pages
          build_dir: storybook-static
          commit_message: 'chore(deploy): Storybook'
          keep_history: false
          jekyll: false
          fqdn: outline.phase2tech.com
        env:
          GITHUB_TOKEN: ${{ secrets.NPM_GITHUB_PACKAGES }}

      # @see https://github.com/marketplace/actions/upload-a-build-artifact
      - name: Upload Storybook artifact
        uses: actions/upload-artifact@v3
        with:
          name: storybook-latest
          path: storybook-static/
          retention-days: 1

  # Job to run package publishing process.
  # This should ONLY be ran on on branches where 
  # you want releases to be published to NPM.
  deploy-npm-packages:
    name: "Changeset: Publish NPM Packages"
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/next'
    needs: ['setup', 'build_outline', 'test']
    strategy:
      matrix:
        node: [ 16 ]

    # The steps for the build job.
    steps:
      # @see https://github.com/marketplace/actions/checkout
      - name: Checkout codebase
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # ðŸ‘ˆ Required to retrieve git history

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          registry-url: 'https://registry.npmjs.org/'
          # Defaults to the user or organization that owns the workflow file
          scope: '@phase2'
          cache: 'yarn',
          cache-dependency-path: 'yarn.lock'

      - name: Install
        run: yarn install --prefer-offline

      - name: 'Changesets: Publish'
        id: changesets
        uses: changesets/action@v1
        with:
          publish: yarn changeset:publish
          version: yarn changeset:version
          commit: 'Outline: Version Packages'
          createGithubReleases: true
        env:
          GITHUB_TOKEN: ${{ secrets.NPM_NPM_PACKAGES }}
          NPM_TOKEN: ${{ secrets.NPM_NPM_PACKAGES }}

  chromatic-deployment:
    name: "Publish: Chromatic"
    runs-on: ubuntu-latest
    needs: ['setup', 'build_outline', 'test']
    strategy:
      matrix:
        node: [ 16 ]
    steps:
      # @see https://github.com/marketplace/actions/checkout
      - name: Checkout codebase
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # ðŸ‘ˆ Required to retrieve git history

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'yarn',
          cache-dependency-path: 'yarn.lock'

      - name: Install
        run: yarn install --prefer-offline

      - name: Build Outline
        run: yarn build

      - name: Build Storybook
        run: yarn storybook:build

      - name: Publish to Chromatic
        uses: chromaui/action@v1
        # Required options for the Chromatic GitHub Action
        with:
          # ðŸ‘‡ Chromatic projectToken, refer to the manage page to obtain it.
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          buildScriptName: storybook:build
          autoAcceptChanges: true # ðŸ‘ˆ Option to accept all changes
