# This is a basic workflow to help you get started with Actions

name: Outline Core Build

# Controls when the workflow will run
on:
  # Which branches to test on push/merge.
  push:
    branches:
      - release
      - main
      - next
      - dev
      - alpha
      - beta
      - rc
  # Which branches to test on pull request.
  pull_request:
    branches:
      - release
      - main
      - next
      - dev
      - alpha
      - beta
      - rc
      - /^issue/
      - /^task/
      - /^feature/
      - /^bug/
      - /^test/

# The jobs for the build workflow.
jobs:
  # Basic setup job to prepare codebase.
  setup:
    name: Install Codebase
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [ 16, 18 ]
    # The steps for the setup job.
    steps:
      # @see https://github.com/marketplace/actions/checkout
      - name: Checkout Codebase
        uses: actions/checkout@v3 

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          registry-url: 'https://npm.pkg.github.com'
          # Defaults to the user or organization that owns the workflow file
          scope: '@phase2'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      # @see https://github.com/marketplace/actions/cache
      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            node_modules
            storybook-static
          key: ${{ runner.os }}-node-${{ matrix.node }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node }}-yarn-

      - name: Initialize .npmrc
        run: cp $NPM_CONFIG_USERCONFIG .npmrc

      # @todo: Remove this test step.
      - name: "DEBUG: .npmrc CONTENTS"
        run: cat .npmrc

      - name: Install
        run: yarn install
        env: 
          NODE_AUTH_TOKEN: ${{ secrets.NPM_GITHUB_PACKAGES }}

      - name: Build Outline
        run: yarn build

      - name: Build Storybook
        run: yarn storybook:build
        
  # Job to run build, and basic assurances the codebase is ready for additional processing.
  build:
    name: Build Codebase
    runs-on: ubuntu-latest
    needs: ['setup']
    strategy:
      matrix:
        node: [ 16, 18 ]
    # The steps for the setup job.
    steps:
      # @see https://github.com/marketplace/actions/checkout
      - name: Checkout Codebase
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      # @see https://github.com/marketplace/actions/cache
      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            node_modules
            storybook-static
          key: ${{ runner.os }}-node-${{ matrix.node }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node }}-yarn-

      # @todo: Remove this test step.
      - name: "DEBUG: YARN VERSION"
        run: yarn --version

      - name: Install from cache
        run: yarn install

      - name: Build from cache
        run: yarn build

      - name: Build Storybook
        run: yarn storybook:build

  # Job to run package publishing process.
  test:
    name: Test Codebase
    runs-on: ubuntu-latest
    needs: ['setup']
    strategy:
      matrix:
        node: [ 16, 18 ]
    # The steps for the setup job.
    steps:
      # @see https://github.com/marketplace/actions/checkout
      - name: Checkout Codebase
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      # @see https://github.com/marketplace/actions/cache
      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            node_modules
            storybook-static
          key: ${{ runner.os }}-node-${{ matrix.node }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node }}-yarn-

      - name: Install from cache
        run: yarn install

      - name: Build Outline
        run: yarn build

      - name: Run eslint
        run: yarn lint:eslint

      - name: Run prettier
        run: yarn lint:prettier

      - name: Build Storybook
        run: yarn storybook:build

  # Basic setup job to prepare codebase.
  deploy-github-pages:
    name: "Publish: GitHub Pages"
    if: github.ref == 'refs/heads/next'
    runs-on: ubuntu-latest
    needs: ['setup', 'build', 'test']

    # The steps for the setup job.
    steps:
      # @see https://github.com/marketplace/actions/checkout
      - name: Checkout codebase
        uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install
        run: yarn install

      - name: Build Outline
        run: yarn build

      - name: Build Storybook
        run: yarn storybook:build

      - name: Check GitHub Pages status
        uses: crazy-max/ghaction-github-status@v3
        with:
          pages_threshold: major_outage

      - name: Deploy to GitHub Pages
        if: success()
        uses: crazy-max/ghaction-github-pages@v2
        with:
          target_branch: gh-pages
          build_dir: storybook-static
          commit_message: 'chore(deploy): Storybook'
          keep_history: true
        env:
          GITHUB_TOKEN: ${{ secrets.NPM_GITHUB_PACKAGES }}

      # @see https://github.com/marketplace/actions/upload-a-build-artifact
      - name: Upload Storybook artifact
        uses: actions/upload-artifact@v2
        with:
          name: storybook-latest
          path: storybook-static/
          retention-days: 1
  
  # Job to run package publishing process.
  # This should ONLY be ran on on branches where 
  deploy-github-packages:
    name: "Publish: GitHub Packages"
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/release'
    needs: ['setup', 'build', 'test']

    # The steps for the build job.
    steps:
      # @see https://github.com/marketplace/actions/checkout
      - name: Checkout codebase
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '16'
          registry-url: 'https://npm.pkg.github.com'
          # Defaults to the user or organization that owns the workflow file
          scope: '@phase2'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      # @see https://github.com/marketplace/actions/cache
      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            node_modules
            storybook-static
          key: ${{ runner.os }}-node-16-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-16-yarn-

      - name: Install from cache
        run: yarn install

      - name: Build Outline
        run: yarn build

      - name: Manage Changesets
        id: changesets
        uses: changesets/action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.NPM_GITHUB_PACKAGES }}

      - name: Publish
        if: steps.changesets.outputs.hasChangesets == 'false'
        # You can do something when a publish should happen.
        run: yarn changeset publish
            
  # Job to run package publishing process.
  # This should ONLY be ran on on branches where 
  deploy-npm-packages:
    name: "Publish: NPM Packages"
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/next'
    needs: ['setup', 'build', 'test']

    # The steps for the build job.
    steps:
      # @see https://github.com/marketplace/actions/checkout
      - name: Checkout codebase
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '16'
          registry-url: 'https://registry.npmjs.org/'
          # Defaults to the user or organization that owns the workflow file
          scope: '@phase2'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      # @see https://github.com/marketplace/actions/cache
      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            node_modules
            storybook-static
          key: ${{ runner.os }}-node-16-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-16-yarn-

      - name: Install from cache
        run: yarn install

      - name: Build Outline
        run: yarn build

      - name: Manage Changesets
        id: changesets
        uses: changesets/action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.NPM_NPM_PACKAGES }}

      - name: Publish
        if: steps.changesets.outputs.hasChangesets == 'false'
        # You can do something when a publish should happen.
        run: yarn changeset publish  
  
  chromatic-deployment:
    name: "Publish: Chromatic"
    runs-on: ubuntu-latest
    needs: ['setup', 'build', 'test']

    steps:
      # @see https://github.com/marketplace/actions/checkout
      - name: Checkout codebase
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # ðŸ‘ˆ Required to retrieve git history

      - uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install
        run: yarn install

      - name: Build Outline
        run: yarn build

      - name: Build Storybook
        run: yarn storybook:build

      - name: Publish to Chromatic
        uses: chromaui/action@v1
        # Required options for the Chromatic GitHub Action
        with:
          # ðŸ‘‡ Chromatic projectToken, refer to the manage page to obtain it.
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          buildScriptName: storybook:build
          autoAcceptChanges: true # ðŸ‘ˆ Option to accept all changes
